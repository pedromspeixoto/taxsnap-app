// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  password          String?
  verified          Boolean   @default(false)
  verificationToken String?   @map("verification_token")
  verificationUrl   String?   @map("verification_url")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  deletedAt         DateTime? @map("deleted_at")

  // Relations
  submissions       Submission[]

  @@map("users")
}

enum SubmissionStatus {
  DRAFT
  PROCESSING
  COMPLETE
  FAILED
}

model Submission {
  id              String           @id @default(uuid())
  userId          String           @map("user_id")
  submissionType  String           @default("pl_average_weighted") @map("submission_type")
  fiscalNumber    String           @default("123456789") @map("fiscal_number")
  year            Int              @default(2025)  
  status          SubmissionStatus @default(DRAFT)
  title           String
  baseIrsPath     String?          @map("base_irs_path")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")

  // Relations
  user            User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  files           SubmissionFile[]
  results         SubmissionResult[]

  @@map("submissions")
}

model SubmissionFile {
  id            String @id @default(uuid())
  submissionId  String @map("submission_id")
  brokerName    String @map("broker_name")
  fileType      String @map("file_type")
  filePath      String @map("file_path")
  createdAt     DateTime @default(now()) @map("created_at")

  // Relations
  submission    Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)

  @@map("submission_files")
}

model SubmissionResult {
  id            String @id @default(uuid())
  submissionId  String @map("submission_id")
  results       Json
  createdAt     DateTime @default(now()) @map("created_at")

  // Relations
  submission    Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)

  @@map("submission_results")
}