"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Checkbox } from "@/components/ui/checkbox"
import { AlertTriangle } from "lucide-react"
import { TranslationHelper } from "@/lib/utils/get-translations"

interface DisclaimerDialogProps {
  isOpen: boolean
  onClose: () => void
  onAccept: () => void
  t: TranslationHelper | null
}

export default function DisclaimerDialog({ isOpen, onClose, onAccept, t }: DisclaimerDialogProps) {
  const [acknowledged, setAcknowledged] = useState(false)

  const handleAccept = () => {
    if (acknowledged) {
      onAccept()
      setAcknowledged(false) // Reset for next time
    }
  }

  const handleClose = () => {
    onClose()
    setAcknowledged(false) // Reset for next time
  }

  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-[600px] max-h-[80vh] overflow-y-auto">
        <DialogHeader className="space-y-4">
          <div className="flex items-center gap-3">
            <AlertTriangle className="w-6 h-6 text-amber-600" />
            <DialogTitle className="text-xl">
              {t?.t('disclaimer.title') || 'Important Disclaimer'}
            </DialogTitle>
          </div>
          <DialogDescription className="text-base">
            {t?.t('disclaimer.description') || 'Please read and acknowledge the following before proceeding:'}
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6 py-4">
          {/* Clean disclaimer text */}
          <div className="space-y-4 text-sm text-white leading-relaxed">
            <p>
              {t?.t('disclaimer.text1') || 
                'The information, reports, and calculations generated by this website are provided for informational purposes only and do not constitute financial, tax, or legal advice. While we strive to ensure the accuracy of the outputs, the results may contain errors or omissions. All generated data must be independently reviewed and verified by the user before submission to any tax authority or other entity.'}
            </p>

            <p>
              {t?.t('disclaimer.text2') || 
                'By using this website, you acknowledge and agree that you are solely responsible for the accuracy, completeness, and compliance of any information submitted and for the consequences of any decisions made based on the outputs provided. The website owners and developers accept no liability for any loss, damage, or penalties resulting from the use of these reports.'}
            </p>
          </div>

          {/* Clean acknowledgment checkbox */}
          <div className="border-t pt-4 mt-6">
            <div className="flex items-center gap-3">
              <Checkbox
                id="disclaimer-acknowledgment"
                checked={acknowledged}
                onCheckedChange={(checked) => setAcknowledged(checked === true)}
              />
              <label 
                htmlFor="disclaimer-acknowledgment" 
                className="text-sm font-medium cursor-pointer text-white select-none"
              >
                {t?.t('disclaimer.acknowledge') || 'I understand and acknowledge the disclaimer'}
              </label>
            </div>
          </div>
        </div>

        <DialogFooter className="flex gap-2">
          <Button variant="outline" onClick={handleClose}>
            {t?.t('disclaimer.cancel') || 'Cancel'}
          </Button>
          <Button 
            onClick={handleAccept}
            disabled={!acknowledged}
            className="bg-green-600 text-white hover:bg-green-700 disabled:opacity-50"
          >
            {t?.t('disclaimer.accept') || 'Accept and Continue'}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  )
}
