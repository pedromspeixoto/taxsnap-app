version: '3.8'

networks:
  taxsnap-network:
    driver: bridge

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taxsnap-postgres
    environment:
      POSTGRES_DB: taxsnap
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taxsnap-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taxsnap"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Next.js Application (Frontend + API)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taxsnap-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/taxsnap
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET:-your-super-secret-access-token-key-change-this-in-production}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-your-super-secret-refresh-token-key-change-this-in-production}
      - JWT_ACCESS_EXPIRY=15m
      - JWT_REFRESH_EXPIRY=7d
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taxsnap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Admin Tool (Optional - remove in production)
  adminer:
    image: adminer:4.8.1
    container_name: taxsnap-adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - taxsnap-network
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local 